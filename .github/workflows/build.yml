name: Build release
on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  pyinstaller-build:
    runs-on: windows-2022
    permissions: write-all
    env:
      ARTIFACT_NAME: SplitFacturas
    steps:
      - name: Put current date into a variable
        run: |
          $NOW=& Get-Date -format yyyyMMddHHmmss
          echo "NOW=$NOW" >> $env:GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: 'x64'

      - name: Install requirements
        run: python -m pip install -r requirements.txt
      
      # - name: Install nuitka
      #   run: python -m pip install -U nuitka

      # - name: Run nuitka
      #   run: python -m nuitka --clang --assume-yes-for-downloads --disable-console --enable-plugin=tk-inter --product-version='1.0' --product-name='${{env.ARTIFACT_NAME}}' src/main.py

      # - name: Rename file
      #   run: Rename-Item -Path main.exe -NewName ${{env.ARTIFACT_NAME}}.exe

      - name: Install PyInstaller
        run: python -m pip install PyInstaller

      - name: Run PyInstaller
        run: python -m PyInstaller --name ${{env.ARTIFACT_NAME}} --windowed src/main.py

      # - name: Move file
      #   run: Move-Item -Path dist\${{env.ARTIFACT_NAME}}.exe -Destination ${{env.ARTIFACT_NAME}}.exe

      # - name: Sign executable
      #   run: |
      #     $b64 = '${{ secrets.CERTIFICATE }}'
      #     $fileName = 'certificate.pfx'
      #     $bytes = [System.Convert]::FromBase64String($b64)
      #     [System.IO.File]::WriteAllBytes($fileName, $bytes)
      #     Import-PfxCertificate -FilePath $fileName -CertStoreLocation Cert:\LocalMachine\My -Password (ConvertTo-SecureString -AsPlainText '${{ secrets.PASSWORD }}')
      #     $file = Get-ChildItem -Path "C:\Program Files (x86)\Windows Kits" -Include signtool.exe -File -Recurse
      #     cd $file[1].Directory.parent
      #     cd x64
      #     & .\signtool.exe sign /f ${{github.workspace}}\$fileName /p ${{ secrets.PASSWORD }} /fd SHA256 /tr http://timestamp.digicert.com /td SHA256 ${{github.workspace}}\${{env.ARTIFACT_NAME}}.exe
       
      - name: Zip output
        run: Compress-Archive -Path dist/${{env.ARTIFACT_NAME}}/${{env.ARTIFACT_NAME}}.exe, dist/${{env.ARTIFACT_NAME}}/_internal -Destination ${{env.ARTIFACT_NAME}}.zip
        working-directory: '${{github.workspace}}'

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: '${{env.ARTIFACT_NAME}}.zip'
          tag: ${{env.NOW}}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: '${{env.ARTIFACT_NAME}} new release ${{env.NOW}}'
        